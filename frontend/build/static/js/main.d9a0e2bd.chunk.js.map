{"version":3,"sources":["reducers/productSlice.js","reducers/productDetailSlice.js","reducers/cartSlice.js","reducers/userSlice.js","reducers/registerSlice.js","reducers/profileSlice.js","reducers/updateProfileSlice.js","store.js","components/Footer.jsx","components/Header.jsx","components/Product.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","screens/CartScreen.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","App.js","theme.js","index.js"],"names":["productSlice","createSlice","name","initialState","loading","products","error","reducers","product_list_request","state","product_list_sucess","action","payload","product_list_failure","actions","productDetailSlice","product","reviews","product_detail_request","product_detail_sucess","product_detail_failure","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","cart_add_item","item","existItem","find","x","map","cart_delete_item","filter","addToCart","id","qty","dispatch","getState","a","axios","get","data","image","price","countinstock","setItem","stringify","cart","userInfoFromStorage","userSlice","userInfo","user_login_request","user_login_sucess","user_login_failure","user_logout","removeItem","user_register_request","user_register_sucess","user_register_failure","registerSlice","profileSlice","user","user_detail_request","user_detail_sucess","user_detail_failure","getUserDetails","config","headers","Authorization","token","message","updateProfileSlice","updatedUser","user_detail_update_request","user_detail_update_sucess","user_detail_update_failure","configureStore","reducer","productList","productReducer","productDetail","productDetailReducer","cartReducer","userReducer","register","registerReducer","profile","profileReducer","updateProfile","updateProfileReducer","useStyles","makeStyles","theme","footer","display","placeItems","height","Footer","classes","className","title","flexGrow","toolbar","linkdeco","textDecoration","color","Header","history","useHistory","useSelector","useDispatch","AppBar","position","Toolbar","Grid","container","sm","xs","Typography","variant","to","Button","onClick","push","amount","Object","keys","length","Fragment","root","maxWidth","minHeight","margin","typoh5","fontSize","fontWeight","actionArea","flexDirection","Product","Card","CardActionArea","CardMedia","component","alt","CardContent","Rating","readOnly","size","value","Number","rating","precision","numReviews","marginTop","cirprogress","HomeScreen","useEffect","window","location","direction","CircularProgress","Alert","severity","justify","alignItems","key","goback","pname","padding","midsection","pricenstock","justifyContent","addtocart","carttext","ProductScreen","match","useState","setQty","params","instock","Divider","description","square","FormControl","formControl","Select","onChange","e","target","Array","MenuItem","disabled","card","marginBottom","width","cardMedia","cardContent","subtotalSection","checkoutButton","checkoutCard","CartScreen","productId","search","split","removeItemFromCart","cartItem","deletefromCart","IconButton","reduce","prev","curr","LoginScreen","email","setEmail","password","setPassword","userLogin","useLocation","redirect","spacing","TextField","label","fullWidth","type","preventDefault","post","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","ProfileScreen","setMessage","pushState","put","console","log","updateUserDetails","gridTemplateRows","App","path","exact","createMuiTheme","palette","primary","main","typography","fontFamily","join","ReactDOM","render","store","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d9a0e2bd.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'product',\r\n  initialState: {\r\n    loading: false,\r\n    products: [],\r\n    error: '',\r\n  },\r\n  reducers: {\r\n    product_list_request: (state) => {\r\n      state.loading = true;\r\n      state.products = [];\r\n    },\r\n    product_list_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.products = action.payload;\r\n    },\r\n    product_list_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  product_list_request,\r\n  product_list_sucess,\r\n  product_list_failure,\r\n} = productSlice.actions;\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch(product_list_request());\r\n    const { data } = await axios.get('/api/products');\r\n    dispatch(product_list_sucess(data));\r\n    window.location('/');\r\n  } catch (error) {\r\n    dispatch(product_list_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default productSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const productDetailSlice = createSlice({\r\n  name: 'productDetail',\r\n  initialState: {\r\n    loading: false,\r\n    product: { reviews: [] },\r\n    error: '',\r\n  },\r\n  reducers: {\r\n    product_detail_request: (state) => {\r\n      state.loading = true;\r\n      state.product = {};\r\n    },\r\n    product_detail_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.product = action.payload;\r\n    },\r\n    product_detail_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  product_detail_request,\r\n  product_detail_sucess,\r\n  product_detail_failure,\r\n} = productDetailSlice.actions;\r\n\r\nexport const listProductDetail = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(product_detail_request());\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch(product_detail_sucess(data));\r\n  } catch (error) {\r\n    dispatch(product_detail_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default productDetailSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    cartItems: cartItemsFromStorage,\r\n  },\r\n  reducers: {\r\n    cart_add_item: (state, action) => {\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    },\r\n    cart_delete_item: (state, action) => {\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (x) => x.product !== action.payload.product\r\n        ),\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { cart_add_item, cart_delete_item } = cartSlice.actions;\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch(\r\n    cart_add_item({\r\n      product: data.id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countinstock: data.countinstock,\r\n      qty,\r\n    })\r\n  );\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const deletefromCart = (cartItem) => (dispatch, getState) => {\r\n  dispatch(cart_delete_item(cartItem));\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport default cartSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : {};\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n  reducers: {\r\n    user_login_request: (state) => {\r\n      state.loading = true;\r\n      state.userInfo = {};\r\n    },\r\n    user_login_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n    user_login_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    user_logout: (state, action) => {\r\n      localStorage.removeItem('userInfo');\r\n      return {};\r\n    },\r\n    user_register_request: (state) => {\r\n      state.loading = true;\r\n      return {};\r\n    },\r\n    user_register_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n    user_register_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  user_login_request,\r\n  user_login_sucess,\r\n  user_login_failure,\r\n  user_logout,\r\n  user_register_request,\r\n  user_register_sucess,\r\n  user_register_failure,\r\n} = userSlice.actions;\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(user_login_request());\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch(user_login_sucess(data));\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(user_login_failure(error.message));\r\n  }\r\n};\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(user_login_request());\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch(user_login_sucess(data));\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(user_login_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { user_login_sucess } from './userSlice';\r\n\r\nexport const registerSlice = createSlice({\r\n  name: 'register',\r\n  initialState: {},\r\n  reducers: {\r\n    user_register_request: (state) => {\r\n      state.loading = true;\r\n      state = {};\r\n    },\r\n    user_register_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n    user_register_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  user_register_request,\r\n  user_register_sucess,\r\n  user_register_failure,\r\n} = registerSlice.actions;\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(user_register_request());\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch(user_register_sucess(data));\r\n    dispatch(user_login_sucess(data));\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(user_register_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default registerSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState: {\r\n    user: {},\r\n  },\r\n  reducers: {\r\n    user_detail_request: (state) => {\r\n      state.loading = true;\r\n      state = {};\r\n    },\r\n    user_detail_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.user = action.payload;\r\n    },\r\n    user_detail_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  user_detail_request,\r\n  user_detail_sucess,\r\n  user_detail_failure,\r\n} = profileSlice.actions;\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(user_detail_request());\r\n\r\n    const {\r\n      user: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch(user_detail_sucess(data));\r\n  } catch (error) {\r\n    dispatch(user_detail_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default profileSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { getUserDetails } from './profileSlice';\r\nimport { user_login_sucess } from './userSlice';\r\n\r\nexport const updateProfileSlice = createSlice({\r\n  name: 'updateProfile',\r\n  initialState: {\r\n    updatedUser: {},\r\n  },\r\n  reducers: {\r\n    user_detail_update_request: (state) => {\r\n      state.loading = true;\r\n      state = {};\r\n    },\r\n    user_detail_update_sucess: (state, action) => {\r\n      state.loading = false;\r\n      state.updatedUser = action.payload;\r\n    },\r\n    user_detail_update_failure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  user_detail_update_request,\r\n  user_detail_update_sucess,\r\n  user_detail_update_failure,\r\n} = updateProfileSlice.actions;\r\n\r\nexport const updateUserDetails = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(user_detail_update_request());\r\n\r\n    const {\r\n      user: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put('/api/users/profile', user, config);\r\n    console.log(data);\r\n    dispatch(user_detail_update_sucess(data));\r\n    dispatch(getUserDetails('profile'));\r\n    dispatch(user_login_sucess(data));\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(user_detail_update_failure(error.message));\r\n  }\r\n};\r\n\r\nexport default updateProfileSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport productReducer from './reducers/productSlice';\r\nimport productDetailReducer from './reducers/productDetailSlice';\r\nimport cartReducer from './reducers/cartSlice';\r\nimport userReducer from './reducers/userSlice';\r\nimport registerReducer from './reducers/registerSlice';\r\nimport profileReducer from './reducers/profileSlice';\r\nimport updateProfileReducer from './reducers/updateProfileSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    productList: productReducer,\r\n    productDetail: productDetailReducer,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    updateProfile: updateProfileReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n    height: '15vh',\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return <footer className={classes.footer}>Copyright &copy; ProShop</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AppBar, Button, Toolbar, Typography, Grid } from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Spacer from 'react-add-space';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { user_logout } from '../reducers/userSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    height: '15vh',\r\n  },\r\n  linkdeco: {\r\n    textDecoration: 'none',\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { userInfo } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClicktocart = () => {\r\n    history.push('/cart');\r\n  };\r\n\r\n  const onClicktologin = () => {\r\n    history.push('/login');\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(user_logout());\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <Grid container>\r\n          <Grid item sm={2} />\r\n          <Grid item container xs={12} sm={8}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link to=\"/\" className={classes.linkdeco}>\r\n                PROSHOP\r\n              </Link>\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={onClicktocart}>\r\n              <ShoppingCartIcon /> <Spacer amount={2} />\r\n              CART\r\n            </Button>\r\n            {userInfo && Object.keys(userInfo).length !== 0 ? (\r\n              <React.Fragment>\r\n                <Button color=\"inherit\">\r\n                  <Link to=\"/profile\" className={classes.linkdeco}>\r\n                    {userInfo.name}\r\n                  </Link>\r\n                </Button>\r\n                <Button color=\"inherit\" onClick={logoutHandler}>\r\n                  <ExitToAppIcon /> <Spacer amount={2} />\r\n                  LOG OUT\r\n                </Button>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Button color=\"inherit\" onClick={onClicktologin}>\r\n                <PersonIcon /> <Spacer amount={2} />\r\n                SIGN IN\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n          <Grid item sm={2} />\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Spacer from 'react-add-space';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 220,\r\n    minHeight: 320,\r\n    margin: '20px',\r\n  },\r\n  typoh5: {\r\n    fontSize: '14px',\r\n    fontWeight: 'bold',\r\n  },\r\n  actionArea: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n});\r\n\r\nconst Product = ({ product }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const onClickproduct = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={() => onClickproduct(product.id)}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={product.name}\r\n          height=\"220\"\r\n          image={product.image}\r\n          title={product.name}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className={classes.typoh5}>\r\n            {product.name}\r\n          </Typography>\r\n          <Rating\r\n            readOnly\r\n            size=\"small\"\r\n            value={Number(product.rating)}\r\n            precision={0.5}\r\n          />\r\n          <Spacer amount={2} />\r\n\r\n          <Typography variant=\"body1\" component=\"span\">\r\n            {product.numReviews} reviews\r\n          </Typography>\r\n          <Typography variant=\"h5\">$ {product.price}</Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect } from 'react';\r\nimport { CircularProgress, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Product from '../components/Product';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listProducts } from '../reducers/productSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: '10px',\r\n  },\r\n  cirprogress: {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n    height: '80px',\r\n  },\r\n}));\r\n\r\nconst HomeScreen = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { loading, products, error } = useSelector(\r\n    (state) => state.productList\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={2} />\r\n      <Grid item container xs={12} sm={8} direction=\"column\">\r\n        <Grid item>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            LATEST PRODUCTS\r\n          </Typography>\r\n        </Grid>\r\n        {loading ? (\r\n          <div className={classes.cirprogress}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n          <Grid item container justify=\"space-around\" alignItems=\"center\">\r\n            {products.map((product) => (\r\n              <Product product={product} key={product.id} />\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid item sm={2} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  CircularProgress,\r\n  Card,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductDetail } from '../reducers/productDetailSlice';\r\n\r\nconst useStyles = makeStyles({\r\n  goback: {\r\n    margin: '20px',\r\n  },\r\n  pname: {\r\n    padding: '20px',\r\n  },\r\n  midsection: {\r\n    padding: '10px 20px',\r\n  },\r\n  image: {\r\n    padding: '20px',\r\n  },\r\n  pricenstock: {\r\n    padding: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  addtocart: {\r\n    padding: '20px',\r\n  },\r\n  carttext: {\r\n    padding: '0 10px',\r\n  },\r\n  cirprogress: {\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n    height: '80px',\r\n  },\r\n});\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const classes = useStyles();\r\n  const [qty, setQty] = useState(1);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { loading, product, error } = useSelector(\r\n    (state) => state.productDetail\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetail(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const instock =\r\n    Number(product.countinstock) > 0 ? 'In Stock' : 'Not In Stock';\r\n\r\n  const onClickGoHome = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const handleQtyChange = (e) => {\r\n    setQty(e.target.value);\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={2} />\r\n      <Grid item container xs={12} sm={8} direction=\"column\">\r\n        <Grid item className={classes.goback}>\r\n          <Button variant=\"text\" color=\"default\" onClick={onClickGoHome}>\r\n            Go Back\r\n          </Button>\r\n        </Grid>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n          <Grid item container>\r\n            <Grid item xs={6} className={classes.image}>\r\n              <Card>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt={product.name}\r\n                  image={product.image}\r\n                  title={product.name}\r\n                />\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={3} container direction=\"column\">\r\n              <Grid item className={classes.pname}>\r\n                <Typography variant=\"h6\" color=\"initial\">\r\n                  {product.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item className={classes.midsection}>\r\n                <Rating\r\n                  readOnly\r\n                  size=\"large\"\r\n                  value={Number(product.rating) || 0}\r\n                  precision={0.5}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item className={classes.midsection}>\r\n                <Typography variant=\"h6\" color=\"initial\">\r\n                  Price: $ {product.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"initial\"\r\n                  className={classes.midsection}\r\n                >\r\n                  {product.description}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.addtocart}>\r\n              <Card className={classes.pricenstock} square>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  Price:\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  $ {product.price}\r\n                </Typography>\r\n              </Card>\r\n              <Card className={classes.pricenstock} square>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  Status:\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  {instock}\r\n                </Typography>\r\n              </Card>\r\n              {Number(product.countinstock) > 0 ? (\r\n                <Card className={classes.pricenstock} square>\r\n                  <Typography variant=\"body1\" color=\"initial\">\r\n                    Qty:\r\n                  </Typography>\r\n                  <FormControl className={classes.formControl}>\r\n                    <Select\r\n                      id=\"demo-simple-select\"\r\n                      value={qty}\r\n                      onChange={handleQtyChange}\r\n                    >\r\n                      {[...Array(product.countinstock).keys()].map((x) => (\r\n                        <MenuItem value={x + 1} key={x}>\r\n                          {x + 1}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Card>\r\n              ) : null}\r\n              <Card className={classes.pricenstock} square>\r\n                {Number(product.countinstock) > 0 ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"initial\"\r\n                      className={classes.carttext}\r\n                    >\r\n                      Add to Cart\r\n                    </Typography>\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" disabled>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"initial\"\r\n                      className={classes.carttext}\r\n                    >\r\n                      Add to Cart\r\n                    </Typography>\r\n                  </Button>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid item sm={2} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, deletefromCart } from '../reducers/cartSlice';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Spacer from 'react-add-space';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    marginBottom: '10px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  cardMedia: {\r\n    width: '10vh',\r\n  },\r\n  title: {\r\n    margin: '10px 0',\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '25%',\r\n  },\r\n  subtotalSection: {\r\n    marginTop: '20px',\r\n  },\r\n  checkoutButton: {\r\n    width: '80%',\r\n  },\r\n  checkoutCard: {\r\n    width: '60%',\r\n    padding: '5px 0',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst CartScreen = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeItemFromCart = (cartItem) => {\r\n    dispatch(deletefromCart(cartItem));\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={8} container>\r\n        <Grid item xs={1} />\r\n        <Grid item xs={8} container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h4\" color=\"initial\" className={classes.title}>\r\n              Shopping Cart\r\n            </Typography>\r\n          </Grid>\r\n          {cartItems.length === 0 ? (\r\n            <Alert severity=\"info\">Cart is Empty</Alert>\r\n          ) : (\r\n            cartItems.map((cartItem) => (\r\n              <Grid item key={cartItem.product}>\r\n                <Card className={classes.card}>\r\n                  <div className={classes.cardContent}>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      alt={cartItem.name}\r\n                      image={cartItem.image}\r\n                      title={cartItem.name}\r\n                      className={classes.cardMedia}\r\n                    />\r\n                  </div>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography component=\"h6\" variant=\"body2\">\r\n                      {cartItem.name}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography component=\"h6\" variant=\"body1\">\r\n                      Qty:\r\n                    </Typography>\r\n                    <Spacer amount={2} />\r\n                    <Select\r\n                      value={cartItem.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(cartItem.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(cartItem.countinstock).keys()].map((x) => (\r\n                        <MenuItem value={x + 1} key={cartItem.product}>\r\n                          {x + 1}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </CardContent>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography component=\"h6\" variant=\"body1\">\r\n                      Price: $ {cartItem.price}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <IconButton onClick={() => removeItemFromCart(cartItem)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {cartItems && cartItems.length > 0 && (\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          container\r\n          direction=\"column\"\r\n          className={classes.subtotalSection}\r\n        >\r\n          <Grid item>\r\n            <Card square className={classes.checkoutCard}>\r\n              <CardContent>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  SUBTOTAL (\r\n                  {cartItems\r\n                    .map((item) => item.qty)\r\n                    .reduce((prev, curr) => prev + curr, 0)}\r\n                  ) items\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"initial\">\r\n                  $\r\n                  {cartItems\r\n                    .map((item) => Number(item.price) * item.qty)\r\n                    .reduce((prev, curr) => prev + curr, 0)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card square className={classes.checkoutCard}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.checkoutButton}\r\n              >\r\n                CHECKOUT\r\n              </Button>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Spacer from 'react-add-space';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../reducers/userSlice';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '60vh',\r\n  },\r\n  title: {\r\n    marginTop: '5vh',\r\n  },\r\n  linkdeco: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst LoginScreen = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.user);\r\n  const { loading, error, userInfo } = userLogin;\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo && Object.keys(userInfo).length !== 0) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item sm={4} />\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      ) : (\r\n        <Grid item sm={4} container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <Typography variant=\"h4\" color=\"initial\" className={classes.title}>\r\n              SIGN IN\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Email Address\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Email\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Password\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Password\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n              SIGN IN\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Not Registered? <Spacer amount={2} />\r\n              <Link to=\"/register\" className={classes.linkdeco}>\r\n                Register\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item sm={4} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Spacer from 'react-add-space';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { register } from '../reducers/registerSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '60vh',\r\n  },\r\n  title: {\r\n    marginTop: '5vh',\r\n  },\r\n  linkdeco: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst RegisterScreen = () => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.user);\r\n  const { loading, error, userInfo } = userLogin;\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo && Object.keys(userInfo).length !== 0) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item sm={4} />\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      ) : (\r\n        <Grid item sm={4} container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <Typography variant=\"h4\" color=\"initial\" className={classes.title}>\r\n              SIGN UP\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Name\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Name\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Email Address\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Email\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Password\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Password\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Confirm Password\r\n            </Typography>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={confirmPassword}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setConfirmPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n              REGISTER\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Already Registered? <Spacer amount={2} />\r\n              <Link to=\"/login\" className={classes.linkdeco}>\r\n                Login\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item sm={4} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUserDetails } from '../reducers/profileSlice';\r\nimport { updateUserDetails } from '../reducers/updateProfileSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '60vh',\r\n  },\r\n  title: {\r\n    marginTop: '5vh',\r\n  },\r\n  linkdeco: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst ProfileScreen = () => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, error, user } = useSelector((state) => state.profile);\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo && Object.keys(userInfo).length === 0) {\r\n      history.pushState('/login');\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [userInfo, dispatch, user, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(updateUserDetails({ id: user.id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item sm={4} />\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Alert severity=\"error\">\r\n          {message}\r\n          {error}\r\n        </Alert>\r\n      ) : (\r\n        <Grid item sm={4} container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <Typography variant=\"h4\" color=\"initial\" className={classes.title}>\r\n              PROFILE\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Name\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Name\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Email Address\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Email\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Password\r\n            </Typography>\r\n            <TextField\r\n              label=\"Enter Password\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n              Confirm Password\r\n            </Typography>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              variant=\"filled\"\r\n              fullWidth={true}\r\n              size={'small'}\r\n              value={confirmPassword}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setConfirmPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n              >\r\n                UPDATE\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item sm={4} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto 1fr auto',\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <Header />\r\n        <main>\r\n          <Route path=\"/login\" exact component={LoginScreen} />\r\n          <Route path=\"/register\" exact component={RegisterScreen} />\r\n          <Route path=\"/profile\" exact component={ProfileScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n          <Route path=\"/\" exact component={HomeScreen} />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#343a40',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Nunito Sans',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}